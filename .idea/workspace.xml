<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="aad29bc8-d45a-4ff1-869d-eac901c9a35c" name="Changes" comment="Implement lambda expression using Functional, Predicate and Consumer functional interface">
      <change afterPath="$PROJECT_DIR$/src/LambdaExpressions/consumerFunctionalInterface/Demo2.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Class" />
      </list>
    </option>
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="ProjectColorInfo">{
  &quot;associatedIndex&quot;: 6
}</component>
  <component name="ProjectId" id="2kjHRTjajqmToGQBPotFWf8XOtb" />
  <component name="ProjectLevelVcsManager" settingsEditedManually="true" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent">{
  &quot;keyToString&quot;: {
    &quot;Application.BubbleSort.executor&quot;: &quot;Run&quot;,
    &quot;Application.CollectionsExample.executor&quot;: &quot;Run&quot;,
    &quot;Application.CollectionsFramework.executor&quot;: &quot;Run&quot;,
    &quot;Application.InsertionSort.executor&quot;: &quot;Debug&quot;,
    &quot;Application.MergeSort.executor&quot;: &quot;Run&quot;,
    &quot;Application.PalindromeCheck.executor&quot;: &quot;Debug&quot;,
    &quot;Application.RemovingDuplicates.executor&quot;: &quot;Debug&quot;,
    &quot;Application.ReverseString.executor&quot;: &quot;Debug&quot;,
    &quot;Application.SelectionSort.executor&quot;: &quot;Debug&quot;,
    &quot;Application.StringManipulation.executor&quot;: &quot;Run&quot;,
    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
    &quot;SHARE_PROJECT_CONFIGURATION_FILES&quot;: &quot;true&quot;,
    &quot;git-widget-placeholder&quot;: &quot;main&quot;,
    &quot;ignore.virus.scanning.warn.message&quot;: &quot;true&quot;,
    &quot;kotlin-language-version-configured&quot;: &quot;true&quot;,
    &quot;onboarding.tips.debug.path&quot;: &quot;/Users/mahabirguptanew/Library/Mobile Documents/com~apple~CloudDocs/Java/Streams/LearnStreams/src/Main.java&quot;
  }
}</component>
  <component name="RunManager" selected="Application.Demo2">
    <configuration name="Demo" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
      <option name="MAIN_CLASS_NAME" value="LambdaExpressions.functionFunctionalInterface.Demo" />
      <module name="LearnStreams" />
      <extension name="coverage">
        <pattern>
          <option name="PATTERN" value="LambdaExpressions.functionFunctionalInterface.*" />
          <option name="ENABLED" value="true" />
        </pattern>
      </extension>
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="Demo1" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
      <option name="MAIN_CLASS_NAME" value="LambdaExpressions.consumerFunctionalInterface.Demo1" />
      <module name="LearnStreams" />
      <extension name="coverage">
        <pattern>
          <option name="PATTERN" value="LambdaExpressions.consumerFunctionalInterface.*" />
          <option name="ENABLED" value="true" />
        </pattern>
      </extension>
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="Demo2" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
      <option name="MAIN_CLASS_NAME" value="LambdaExpressions.consumerFunctionalInterface.Demo2" />
      <module name="LearnStreams" />
      <extension name="coverage">
        <pattern>
          <option name="PATTERN" value="LambdaExpressions.consumerFunctionalInterface.*" />
          <option name="ENABLED" value="true" />
        </pattern>
      </extension>
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="LambdaExpressions.functionFunctionalInterface.Demo2" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
      <option name="MAIN_CLASS_NAME" value="LambdaExpressions.functionFunctionalInterface.Demo2" />
      <module name="LearnStreams" />
      <extension name="coverage">
        <pattern>
          <option name="PATTERN" value="LambdaExpressions.functionFunctionalInterface.*" />
          <option name="ENABLED" value="true" />
        </pattern>
      </extension>
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="Main" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
      <option name="MAIN_CLASS_NAME" value="LambdaExpressions.consumerFunctionalInterface.Main" />
      <module name="LearnStreams" />
      <extension name="coverage">
        <pattern>
          <option name="PATTERN" value="LambdaExpressions.consumerFunctionalInterface.*" />
          <option name="ENABLED" value="true" />
        </pattern>
      </extension>
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <recent_temporary>
      <list>
        <item itemvalue="Application.Demo2" />
        <item itemvalue="Application.Demo1" />
        <item itemvalue="Application.Main" />
        <item itemvalue="Application.LambdaExpressions.functionFunctionalInterface.Demo2" />
        <item itemvalue="Application.Demo" />
      </list>
    </recent_temporary>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="aad29bc8-d45a-4ff1-869d-eac901c9a35c" name="Changes" comment="" />
      <created>1723790061231</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1723790061231</updated>
    </task>
    <task id="LOCAL-00001" summary="Implement the Bubble Sort Sorting Algorithms">
      <option name="closed" value="true" />
      <created>1724034309925</created>
      <option name="number" value="00001" />
      <option name="presentableId" value="LOCAL-00001" />
      <option name="project" value="LOCAL" />
      <updated>1724034309925</updated>
    </task>
    <task id="LOCAL-00002" summary="Implement the Selection Sort Sorting Algorithm">
      <option name="closed" value="true" />
      <created>1724037520382</created>
      <option name="number" value="00002" />
      <option name="presentableId" value="LOCAL-00002" />
      <option name="project" value="LOCAL" />
      <updated>1724037520382</updated>
    </task>
    <task id="LOCAL-00003" summary="Implement the Insertion Sort Sorting Algorithm">
      <option name="closed" value="true" />
      <created>1724038735462</created>
      <option name="number" value="00003" />
      <option name="presentableId" value="LOCAL-00003" />
      <option name="project" value="LOCAL" />
      <updated>1724038735462</updated>
    </task>
    <task id="LOCAL-00004" summary="Implement the Quick Sort method in the Sorting Algorithm">
      <option name="closed" value="true" />
      <created>1724074496169</created>
      <option name="number" value="00004" />
      <option name="presentableId" value="LOCAL-00004" />
      <option name="project" value="LOCAL" />
      <updated>1724074496169</updated>
    </task>
    <task id="LOCAL-00005" summary="Implement the Fibonacci Sequence in the Recursion Algorithm">
      <option name="closed" value="true" />
      <created>1724075506169</created>
      <option name="number" value="00005" />
      <option name="presentableId" value="LOCAL-00005" />
      <option name="project" value="LOCAL" />
      <updated>1724075506169</updated>
    </task>
    <task id="LOCAL-00006" summary="Implement the Factorial method in the Recursion Algorithm">
      <option name="closed" value="true" />
      <created>1724076260006</created>
      <option name="number" value="00006" />
      <option name="presentableId" value="LOCAL-00006" />
      <option name="project" value="LOCAL" />
      <updated>1724076260006</updated>
    </task>
    <task id="LOCAL-00007" summary="Implement the Binary Tree Traversals in the Recursion Algorithm">
      <option name="closed" value="true" />
      <created>1724076527877</created>
      <option name="number" value="00007" />
      <option name="presentableId" value="LOCAL-00007" />
      <option name="project" value="LOCAL" />
      <updated>1724076527877</updated>
    </task>
    <task id="LOCAL-00008" summary="Implement the Pre-Order Traversal in the Recursion Algorithm">
      <option name="closed" value="true" />
      <created>1724076755610</created>
      <option name="number" value="00008" />
      <option name="presentableId" value="LOCAL-00008" />
      <option name="project" value="LOCAL" />
      <updated>1724076755610</updated>
    </task>
    <task id="LOCAL-00009" summary="Implement the Post-Order Traversal in the Recursion Algorithm">
      <option name="closed" value="true" />
      <created>1724077850998</created>
      <option name="number" value="00009" />
      <option name="presentableId" value="LOCAL-00009" />
      <option name="project" value="LOCAL" />
      <updated>1724077850998</updated>
    </task>
    <task id="LOCAL-00010" summary="Implement Permutations in the Recursion Algorithm">
      <option name="closed" value="true" />
      <created>1724078680831</created>
      <option name="number" value="00010" />
      <option name="presentableId" value="LOCAL-00010" />
      <option name="project" value="LOCAL" />
      <updated>1724078680831</updated>
    </task>
    <task id="LOCAL-00011" summary="Use ArrayList, HashSet and HashMap in CollectionsExample">
      <option name="closed" value="true" />
      <created>1724117201276</created>
      <option name="number" value="00011" />
      <option name="presentableId" value="LOCAL-00011" />
      <option name="project" value="LOCAL" />
      <updated>1724117201276</updated>
    </task>
    <task id="LOCAL-00012" summary="Implement the ReverseString method using StringBuilder class">
      <option name="closed" value="true" />
      <created>1724122201013</created>
      <option name="number" value="00012" />
      <option name="presentableId" value="LOCAL-00012" />
      <option name="project" value="LOCAL" />
      <updated>1724122201013</updated>
    </task>
    <task id="LOCAL-00013" summary="Implement the RemoveDuplicate method using StringBuilder and Character class">
      <option name="closed" value="true" />
      <created>1724123809528</created>
      <option name="number" value="00013" />
      <option name="presentableId" value="LOCAL-00013" />
      <option name="project" value="LOCAL" />
      <updated>1724123809528</updated>
    </task>
    <task id="LOCAL-00014" summary="Implement sorting of Arrays using Built-in Sort (Arrays.sort)">
      <option name="closed" value="true" />
      <created>1724162398209</created>
      <option name="number" value="00014" />
      <option name="presentableId" value="LOCAL-00014" />
      <option name="project" value="LOCAL" />
      <updated>1724162398209</updated>
    </task>
    <task id="LOCAL-00015" summary="Implement sorting of Arrays using Bubble Sort">
      <option name="closed" value="true" />
      <created>1724162759031</created>
      <option name="number" value="00015" />
      <option name="presentableId" value="LOCAL-00015" />
      <option name="project" value="LOCAL" />
      <updated>1724162759031</updated>
    </task>
    <task id="LOCAL-00016" summary="Implement Array Searching using Linear Search">
      <option name="closed" value="true" />
      <created>1724163176759</created>
      <option name="number" value="00016" />
      <option name="presentableId" value="LOCAL-00016" />
      <option name="project" value="LOCAL" />
      <updated>1724163176759</updated>
    </task>
    <task id="LOCAL-00017" summary="Implement Array Searching using Binary Search">
      <option name="closed" value="true" />
      <created>1724163652019</created>
      <option name="number" value="00017" />
      <option name="presentableId" value="LOCAL-00017" />
      <option name="project" value="LOCAL" />
      <updated>1724163652019</updated>
    </task>
    <task id="LOCAL-00018" summary="Implement FibonacciSequence using Memoization">
      <option name="closed" value="true" />
      <created>1724467883387</created>
      <option name="number" value="00018" />
      <option name="presentableId" value="LOCAL-00018" />
      <option name="project" value="LOCAL" />
      <updated>1724467883387</updated>
    </task>
    <task id="LOCAL-00019" summary="Implement FibonacciSequence using iterativeApproach">
      <option name="closed" value="true" />
      <created>1724581189123</created>
      <option name="number" value="00019" />
      <option name="presentableId" value="LOCAL-00019" />
      <option name="project" value="LOCAL" />
      <updated>1724581189123</updated>
    </task>
    <task id="LOCAL-00020" summary="Implement FibonacciSequence using Optimized Space Approach">
      <option name="closed" value="true" />
      <created>1724581782571</created>
      <option name="number" value="00020" />
      <option name="presentableId" value="LOCAL-00020" />
      <option name="project" value="LOCAL" />
      <updated>1724581782571</updated>
    </task>
    <task id="LOCAL-00021" summary="Implement SortingAlgorithms using Bubble Sort">
      <option name="closed" value="true" />
      <created>1724582948301</created>
      <option name="number" value="00021" />
      <option name="presentableId" value="LOCAL-00021" />
      <option name="project" value="LOCAL" />
      <updated>1724582948301</updated>
    </task>
    <task id="LOCAL-00022" summary="Implement SearchingAlgorithms using Binary Search">
      <option name="closed" value="true" />
      <created>1724583253149</created>
      <option name="number" value="00022" />
      <option name="presentableId" value="LOCAL-00022" />
      <option name="project" value="LOCAL" />
      <updated>1724583253149</updated>
    </task>
    <task id="LOCAL-00023" summary="Implement DynamicProgramming using Fibonacci">
      <option name="closed" value="true" />
      <created>1724583585653</created>
      <option name="number" value="00023" />
      <option name="presentableId" value="LOCAL-00023" />
      <option name="project" value="LOCAL" />
      <updated>1724583585653</updated>
    </task>
    <task id="LOCAL-00024" summary="Implement GreedyAlgorithms using GreedyAlgorithms">
      <option name="closed" value="true" />
      <created>1724584757893</created>
      <option name="number" value="00024" />
      <option name="presentableId" value="LOCAL-00024" />
      <option name="project" value="LOCAL" />
      <updated>1724584757893</updated>
    </task>
    <task id="LOCAL-00025" summary="Implement GraphAlgorithms using Breadth-First Search (BFS)">
      <option name="closed" value="true" />
      <created>1724585379080</created>
      <option name="number" value="00025" />
      <option name="presentableId" value="LOCAL-00025" />
      <option name="project" value="LOCAL" />
      <updated>1724585379081</updated>
    </task>
    <task id="LOCAL-00026" summary="Implement lambda expression using functional interface">
      <option name="closed" value="true" />
      <created>1724855433675</created>
      <option name="number" value="00026" />
      <option name="presentableId" value="LOCAL-00026" />
      <option name="project" value="LOCAL" />
      <updated>1724855433675</updated>
    </task>
    <task id="LOCAL-00027" summary="Implement lambda expression using functional interface with 2 parameters">
      <option name="closed" value="true" />
      <created>1724857547668</created>
      <option name="number" value="00027" />
      <option name="presentableId" value="LOCAL-00027" />
      <option name="project" value="LOCAL" />
      <updated>1724857547669</updated>
    </task>
    <task id="LOCAL-00028" summary="Implement lambda expression using functional interface with 2 parameters and 1 return type">
      <option name="closed" value="true" />
      <created>1724924155906</created>
      <option name="number" value="00028" />
      <option name="presentableId" value="LOCAL-00028" />
      <option name="project" value="LOCAL" />
      <updated>1724924155907</updated>
    </task>
    <task id="LOCAL-00029" summary="Implement lambda expression using Predicate functional interface with 1 parameter and 1 return type to check if number is &gt; 4">
      <option name="closed" value="true" />
      <created>1724925830007</created>
      <option name="number" value="00029" />
      <option name="presentableId" value="LOCAL-00029" />
      <option name="project" value="LOCAL" />
      <updated>1724925830007</updated>
    </task>
    <task id="LOCAL-00030" summary="Implement lambda expression using Predicate functional interface with 1 parameter and 1 return type to check if given string is greater than 4">
      <option name="closed" value="true" />
      <created>1724926012236</created>
      <option name="number" value="00030" />
      <option name="presentableId" value="LOCAL-00030" />
      <option name="project" value="LOCAL" />
      <updated>1724926012236</updated>
    </task>
    <task id="LOCAL-00031" summary="Implement lambda expression using Predicate functional interface with 1 parameter and 1 return type to check if given element in the array is greater than 4 and print all those elements which is greater than 4">
      <option name="closed" value="true" />
      <created>1724929320536</created>
      <option name="number" value="00031" />
      <option name="presentableId" value="LOCAL-00031" />
      <option name="project" value="LOCAL" />
      <updated>1724929320537</updated>
    </task>
    <task id="LOCAL-00032" summary="Implement lambda expression using Predicate functional interface with 1 parameter of type object and 1 return type to check if given employee object's salary is greater than 500 and employee object's experience is greater than 3 print name of employee">
      <option name="closed" value="true" />
      <created>1724931041418</created>
      <option name="number" value="00032" />
      <option name="presentableId" value="LOCAL-00032" />
      <option name="project" value="LOCAL" />
      <updated>1724931041418</updated>
    </task>
    <task id="LOCAL-00033" summary="Implement lambda expression using Predicate functional interface with 1 parameter of type ArrayList and 1 return type to check if employee object's salary is greater than 500 and employee object's experience is greater than 3 print name of employee">
      <option name="closed" value="true" />
      <created>1724934556547</created>
      <option name="number" value="00033" />
      <option name="presentableId" value="LOCAL-00033" />
      <option name="project" value="LOCAL" />
      <updated>1724934556548</updated>
    </task>
    <task id="LOCAL-00034" summary="Implement lambda expression using Predicate functional interface with 1 parameter of type ArrayList and 1 return type to check if employee object's salary is greater than 500 and employee object's experience is greater than 3 print name of employee using for loop and for each loop">
      <option name="closed" value="true" />
      <created>1724935025419</created>
      <option name="number" value="00034" />
      <option name="presentableId" value="LOCAL-00034" />
      <option name="project" value="LOCAL" />
      <updated>1724935025420</updated>
    </task>
    <task id="LOCAL-00035" summary="Implement lambda expression using Predicate functional interface with 1 Integer parameter and 1 return type to check if number is even and number is greater than 50 or not using and operator to join 2 predicates">
      <option name="closed" value="true" />
      <created>1724939204314</created>
      <option name="number" value="00035" />
      <option name="presentableId" value="LOCAL-00035" />
      <option name="project" value="LOCAL" />
      <updated>1724939204315</updated>
    </task>
    <task id="LOCAL-00036" summary="Implement lambda expression using Predicate functional interface with 1 Integer parameter and 1 return type to check if number is even or number is greater than 50 or not using or operator to join 2 predicates">
      <option name="closed" value="true" />
      <created>1724939538893</created>
      <option name="number" value="00036" />
      <option name="presentableId" value="LOCAL-00036" />
      <option name="project" value="LOCAL" />
      <updated>1724939538894</updated>
    </task>
    <task id="LOCAL-00037" summary="Implement lambda expression using Predicate functional interface with 1 Integer parameter and 1 return type to check if number is odd using not operator">
      <option name="closed" value="true" />
      <created>1724940006455</created>
      <option name="number" value="00037" />
      <option name="presentableId" value="LOCAL-00037" />
      <option name="project" value="LOCAL" />
      <updated>1724940006455</updated>
    </task>
    <task id="LOCAL-00038" summary="Implement lambda expression using Function functional interface with 1 Integer parameter and 1 int return type to find the square of the number">
      <option name="closed" value="true" />
      <created>1724942004795</created>
      <option name="number" value="00038" />
      <option name="presentableId" value="LOCAL-00038" />
      <option name="project" value="LOCAL" />
      <updated>1724942004796</updated>
    </task>
    <task id="LOCAL-00039" summary="Implement lambda expression using Function functional interface with 1 String parameter and 1 Integer return type to find the length of the String parameter">
      <option name="closed" value="true" />
      <created>1724942514870</created>
      <option name="number" value="00039" />
      <option name="presentableId" value="LOCAL-00039" />
      <option name="project" value="LOCAL" />
      <updated>1724942514870</updated>
    </task>
    <task id="LOCAL-00040" summary="Implement lambda expression using Function functional interface with 1 object parameter and 1 Integer return type to return the integer salary">
      <option name="closed" value="true" />
      <created>1724943021910</created>
      <option name="number" value="00040" />
      <option name="presentableId" value="LOCAL-00040" />
      <option name="project" value="LOCAL" />
      <updated>1724943021910</updated>
    </task>
    <task id="LOCAL-00041" summary="Implement lambda expression using Function functional interface with 1 object parameter and 1 Integer return type to return the integer bonus&#10;Use the Predicate Functional interface to check if the bonus is &gt;2000 and print the employee details if true">
      <option name="closed" value="true" />
      <created>1725011700820</created>
      <option name="number" value="00041" />
      <option name="presentableId" value="LOCAL-00041" />
      <option name="project" value="LOCAL" />
      <updated>1725011700821</updated>
    </task>
    <task id="LOCAL-00042" summary="Implement lambda expression using Function functional interface and use andThen() and compose() for chaining">
      <option name="closed" value="true" />
      <created>1725021525735</created>
      <option name="number" value="00042" />
      <option name="presentableId" value="LOCAL-00042" />
      <option name="project" value="LOCAL" />
      <updated>1725021525735</updated>
    </task>
    <task id="LOCAL-00043" summary="Implement lambda expression using Consumer functional interface and accept() method to pass a parameter with no return value">
      <option name="closed" value="true" />
      <created>1725021895688</created>
      <option name="number" value="00043" />
      <option name="presentableId" value="LOCAL-00043" />
      <option name="project" value="LOCAL" />
      <updated>1725021895688</updated>
    </task>
    <task id="LOCAL-00044" summary="Implement lambda expression using Functional, Predicate and Consumer functional interface">
      <option name="closed" value="true" />
      <created>1725024265804</created>
      <option name="number" value="00044" />
      <option name="presentableId" value="LOCAL-00044" />
      <option name="project" value="LOCAL" />
      <updated>1725024265804</updated>
    </task>
    <option name="localTasksCounter" value="45" />
    <servers />
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State />
          </value>
        </entry>
      </map>
    </option>
  </component>
  <component name="VcsManagerConfiguration">
    <MESSAGE value="Implement FibonacciSequence using Optimized Space Approach" />
    <MESSAGE value="Implement SortingAlgorithms using Bubble Sort" />
    <MESSAGE value="Implement SearchingAlgorithms using Binary Search" />
    <MESSAGE value="Implement DynamicProgramming using Fibonacci" />
    <MESSAGE value="Implement GreedyAlgorithms using GreedyAlgorithms" />
    <MESSAGE value="Implement GraphAlgorithms using Breadth-First Search (BFS)" />
    <MESSAGE value="Implement lambda expression using functional interface" />
    <MESSAGE value="Implement lambda expression using functional interface with 2 parameters" />
    <MESSAGE value="Implement lambda expression using functional interface with 2 parameters and 1 return type" />
    <MESSAGE value="Implement lambda expression using Predicate functional interface with 1 parameter and 1 return type to check if number is &gt; 4" />
    <MESSAGE value="Implement lambda expression using Predicate functional interface with 1 parameter and 1 return type to check if given string is greater than 4" />
    <MESSAGE value="Implement lambda expression using Predicate functional interface with 1 parameter and 1 return type to check if given element in the array is greater than 4 and print all those elements which is greater than 4" />
    <MESSAGE value="Implement lambda expression using Predicate functional interface with 1 parameter of type object and 1 return type to check if given employee object's salary is greater than 500 and employee object's experience is greater than 3 print name of employee" />
    <MESSAGE value="Implement lambda expression using Predicate functional interface with 1 parameter of type ArrayList and 1 return type to check if employee object's salary is greater than 500 and employee object's experience is greater than 3 print name of employee" />
    <MESSAGE value="Implement lambda expression using Predicate functional interface with 1 parameter of type ArrayList and 1 return type to check if employee object's salary is greater than 500 and employee object's experience is greater than 3 print name of employee using for loop and for each loop" />
    <MESSAGE value="Implement lambda expression using Predicate functional interface with 1 Integer parameter and 1 return type to check if number is even and number is greater than 50 or not using and operator to join 2 predicates" />
    <MESSAGE value="Implement lambda expression using Predicate functional interface with 1 Integer parameter and 1 return type to check if number is even or number is greater than 50 or not using or operator to join 2 predicates" />
    <MESSAGE value="Implement lambda expression using Predicate functional interface with 1 Integer parameter and 1 return type to check if number is odd using not operator" />
    <MESSAGE value="Implement lambda expression using Function functional interface with 1 Integer parameter and 1 int return type to find the square of the number" />
    <MESSAGE value="Implement lambda expression using Function functional interface with 1 String parameter and 1 Integer return type to find the length of the String parameter" />
    <MESSAGE value="Implement lambda expression using Function functional interface with 1 object parameter and 1 Integer return type to return the integer salary" />
    <MESSAGE value="Implement lambda expression using Function functional interface with 1 object parameter and 1 Integer return type to return the integer bonus&#10;Use the Predicate Functional interface to check if the bonus is &gt;2000 and print the employee details if true" />
    <MESSAGE value="Implement lambda expression using Function functional interface and use andThen() and compose() for chaining" />
    <MESSAGE value="Implement lambda expression using Consumer functional interface and accept() method to pass a parameter with no return value" />
    <MESSAGE value="Implement lambda expression using Functional, Predicate and Consumer functional interface" />
    <option name="LAST_COMMIT_MESSAGE" value="Implement lambda expression using Functional, Predicate and Consumer functional interface" />
  </component>
  <component name="XDebuggerManager">
    <breakpoint-manager>
      <breakpoints>
        <line-breakpoint enabled="true" type="java-line">
          <url>file://$PROJECT_DIR$/src/SortingAlgorithms/BubbleSort.java</url>
          <line>8</line>
          <option name="timeStamp" value="1" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="java-line">
          <url>file://$PROJECT_DIR$/src/SortingAlgorithms/SelectionSort.java</url>
          <line>8</line>
          <option name="timeStamp" value="2" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="java-line">
          <url>file://$PROJECT_DIR$/src/SortingAlgorithms/InsertionSort.java</url>
          <line>8</line>
          <option name="timeStamp" value="3" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="java-line">
          <url>file://$PROJECT_DIR$/src/SortingAlgorithms/MergeSort.java</url>
          <line>8</line>
          <option name="timeStamp" value="4" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="java-line">
          <url>file://$PROJECT_DIR$/src/SortingAlgorithms/QuickSort.java</url>
          <line>8</line>
          <option name="timeStamp" value="5" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="java-line">
          <url>file://$PROJECT_DIR$/src/RecursionAlgorithms/FibonacciSequence.java</url>
          <line>5</line>
          <option name="timeStamp" value="6" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="java-line">
          <url>file://$PROJECT_DIR$/src/RecursionAlgorithms/Factorial.java</url>
          <line>6</line>
          <option name="timeStamp" value="7" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="java-line">
          <url>file://$PROJECT_DIR$/src/RecursionAlgorithms/Permutations.java</url>
          <line>6</line>
          <option name="timeStamp" value="8" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="java-line">
          <url>file://$PROJECT_DIR$/src/StringManipulation/RemovingDuplicates.java</url>
          <line>14</line>
          <option name="timeStamp" value="12" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="java-line">
          <url>file://$PROJECT_DIR$/src/StringManipulation/PalindromeCheck.java</url>
          <line>9</line>
          <option name="timeStamp" value="14" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="java-line">
          <url>file://$PROJECT_DIR$/src/RecursionAlgorithms/FibonacciSequence.java</url>
          <line>9</line>
          <option name="timeStamp" value="15" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="java-method">
          <url>file://$PROJECT_DIR$/src/StringManipulation/RemovingDuplicates.java</url>
          <line>13</line>
          <properties class="StringManipulation.RemovingDuplicates" method="removeDuplicates">
            <option name="EMULATED" value="true" />
            <option name="WATCH_EXIT" value="false" />
          </properties>
          <option name="timeStamp" value="11" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="java-method">
          <url>file://$PROJECT_DIR$/src/GreedyAlgorithms/GreedyAlgorithms.java</url>
          <line>16</line>
          <properties class="GreedyAlgorithms.GreedyAlgorithms" method="coinChange">
            <option name="EMULATED" value="true" />
            <option name="WATCH_EXIT" value="false" />
          </properties>
          <option name="timeStamp" value="16" />
        </line-breakpoint>
      </breakpoints>
    </breakpoint-manager>
  </component>
</project>